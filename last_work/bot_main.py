import logging
import telebot
import requests
import os
from telebot import types

# –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                     level=logging.INFO)

bot = telebot.TeleBot("6299259595:AAEDdiUHF9BbeqqCFtpicJpgApNiUhakcq0")

REMOVE_BG_API_KEY = "6GGfogP2U79WQrVqWxVxfvvG"

START, PHOTO = range(2)

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
FORMAT_LIMITS = {
    'PNG': 10 * 4000 * 2500,  # 10 –ú–ø
    'JPG': 25 * 6250 * 4000,  # 25 –ú–ø
    'ZIP': 25 * 6250 * 4000  # 25 –ú–ø
}



@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup.add(types.KeyboardButton('Send Photo'))

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫! –Ø –±–æ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–≤–æ–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!\n–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, '
                                      '—á—Ç–æ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "start"üòò\n'
                                      'PS: —Ñ–æ—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ç—Ä–µ—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö: PNG, JPG, ZIP\n'
                                      'PNG - –¥–æ 10 –ú–ø\nJPG - –¥–æ 25 –ú–ø\nZIP - –¥–æ 25 –ú–ø', reply_markup=markup)

    bot.register_next_step_handler(message, process_photo)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ
def process_photo(message):
    if message.text == 'Send Photo':
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.')

        bot.register_next_step_handler(message, process_received_photo)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ
def process_received_photo(message):
    if message.content_type == 'photo':
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ
        photo_id = message.photo[-1].file_id
        photo_info = bot.get_file(photo_id)
        photo_path = photo_info.file_path

        photo_url = f"https://api.telegram.org/file/bot{bot.token}/{photo_path}"
        response = requests.get(photo_url)

        format_name = os.path.splitext(photo_path)[1][1:].upper()
        format_limit = FORMAT_LIMITS.get(format_name)

        if len(response.content) > format_limit:
            bot.send_message(message.chat.id, f'–ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∞ {format_name}.')
            return

        photo_data = response.content

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞
        remove_bg_url = "https://api.remove.bg/v1.0/removebg"
        headers = {"X-Api-Key": REMOVE_BG_API_KEY}
        files = {"image_file": photo_data}
        try:
            remove_bg_response = requests.post(remove_bg_url, headers=headers, files=files)
            remove_bg_response.raise_for_status()

            if remove_bg_response.status_code == 200:
                temp_filename = "photo_without_bg.png"

                with open(temp_filename, "wb") as file:
                    file.write(remove_bg_response.content)

                with open(temp_filename, "rb") as file:
                    bot.send_photo(message.chat.id, file)

                os.remove(temp_filename)

                bot.send_message(message.chat.id, '–§–æ—Ç–æ –≥–æ—Ç–æ–≤–æ, —É–¥–∞—á–∏!')
            else:
                bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ–Ω–∞.')

        except requests.exceptions.HTTPError as e:
            bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞ HTTP: {e}\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ–µ —Ñ–æ—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.\n–Ø –Ω–µ –º–æ–≥—É –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å((')
            

        except requests.exceptions.RequestException as e:
            bot.send_message(message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')


@bot.message_handler(func=lambda message: True)
def unknown(message):
    bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.')


bot.polling()
